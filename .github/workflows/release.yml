on: push

name: Two-stage release creation

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2

      - name: Delete existing release
        continue-on-error: true
        run: |
          hub release delete rolling-release
          git push --delete origin refs/tags/rolling-release

      - name: Create release draft
        id: create_release
        run: |
          hub release create --prerelease --draft \
            -m "Rolling release $GITHUB_SHA (in progress)" \
            -t $GITHUB_SHA rolling-release
          upload_url=$(hub release show -f '%uA' rolling-release)
          echo "::set-output name=upload_url::$upload_url"

  upload_asset:
    name: Upload asset
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - if: false
        name: Pretend we are building
        run: sleep 1200

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown

  publish_release:
    name: Publish release
    needs: upload_asset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Publish release
        run: |
          hub release edit --draft=false \
            -m "Rolling release $GITHUB_SHA" \
            rolling-release
